// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App works 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Connect(Search) />,
        <div
          id="container"
          style={
            Object {
              "display": "flex",
            }
          }
        >
          <div
            id="leftSidebar"
            style={
              Object {
                "borderRight": "thin solid #aaa",
                "flex": 3,
                "paddingRight": 10,
              }
            }
          >
            <Connect(CategoryList)
              onCategoryClick={undefined}
            />
          </div>
          <div
            id="main"
            style={
              Object {
                "flex": 5,
              }
            }
          >
            <Connect(ProductList) />
          </div>
          <div
            id="rightSidebar"
            style={
              Object {
                "display": "none",
                "flex": 2,
              }
            }
          >
            The Cart
            <button
              onClick={[Function]}
            >
              =&gt;
            </button>
            <Connect(Cart) />
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              id="leftSidebar"
              style={
                Object {
                  "borderRight": "thin solid #aaa",
                  "flex": 3,
                  "paddingRight": 10,
                }
              }
            >
              <Connect(CategoryList)
                onCategoryClick={undefined}
              />
            </div>,
            <div
              id="main"
              style={
                Object {
                  "flex": 5,
                }
              }
            >
              <Connect(ProductList) />
            </div>,
            <div
              id="rightSidebar"
              style={
                Object {
                  "display": "none",
                  "flex": 2,
                }
              }
            >
              The Cart
              <button
                onClick={[Function]}
              >
                =&gt;
              </button>
              <Connect(Cart) />
            </div>,
          ],
          "id": "container",
          "style": Object {
            "display": "flex",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Connect(CategoryList)
                onCategoryClick={undefined}
              />,
              "id": "leftSidebar",
              "style": Object {
                "borderRight": "thin solid #aaa",
                "flex": 3,
                "paddingRight": 10,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onCategoryClick": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Connect(ProductList) />,
              "id": "main",
              "style": Object {
                "flex": 5,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "The Cart",
                <button
                  onClick={[Function]}
                >
                  =&gt;
                </button>,
                <Connect(Cart) />,
              ],
              "id": "rightSidebar",
              "style": Object {
                "display": "none",
                "flex": 2,
              },
            },
            "ref": null,
            "rendered": Array [
              "The Cart",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "=>",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "=>",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Connect(Search) />,
          <div
            id="container"
            style={
              Object {
                "display": "flex",
              }
            }
          >
            <div
              id="leftSidebar"
              style={
                Object {
                  "borderRight": "thin solid #aaa",
                  "flex": 3,
                  "paddingRight": 10,
                }
              }
            >
              <Connect(CategoryList)
                onCategoryClick={undefined}
              />
            </div>
            <div
              id="main"
              style={
                Object {
                  "flex": 5,
                }
              }
            >
              <Connect(ProductList) />
            </div>
            <div
              id="rightSidebar"
              style={
                Object {
                  "display": "none",
                  "flex": 2,
                }
              }
            >
              The Cart
              <button
                onClick={[Function]}
              >
                =&gt;
              </button>
              <Connect(Cart) />
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                id="leftSidebar"
                style={
                  Object {
                    "borderRight": "thin solid #aaa",
                    "flex": 3,
                    "paddingRight": 10,
                  }
                }
              >
                <Connect(CategoryList)
                  onCategoryClick={undefined}
                />
              </div>,
              <div
                id="main"
                style={
                  Object {
                    "flex": 5,
                  }
                }
              >
                <Connect(ProductList) />
              </div>,
              <div
                id="rightSidebar"
                style={
                  Object {
                    "display": "none",
                    "flex": 2,
                  }
                }
              >
                The Cart
                <button
                  onClick={[Function]}
                >
                  =&gt;
                </button>
                <Connect(Cart) />
              </div>,
            ],
            "id": "container",
            "style": Object {
              "display": "flex",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(CategoryList)
                  onCategoryClick={undefined}
                />,
                "id": "leftSidebar",
                "style": Object {
                  "borderRight": "thin solid #aaa",
                  "flex": 3,
                  "paddingRight": 10,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onCategoryClick": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(ProductList) />,
                "id": "main",
                "style": Object {
                  "flex": 5,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "The Cart",
                  <button
                    onClick={[Function]}
                  >
                    =&gt;
                  </button>,
                  <Connect(Cart) />,
                ],
                "id": "rightSidebar",
                "style": Object {
                  "display": "none",
                  "flex": 2,
                },
              },
              "ref": null,
              "rendered": Array [
                "The Cart",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "=>",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "=>",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
